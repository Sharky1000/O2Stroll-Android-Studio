// Generated by view binder compiler. Do not edit!
package com.example.o2stroll.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.o2stroll.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAboutBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView appDescription;

  @NonNull
  public final TextView appIcon;

  @NonNull
  public final TextView appName;

  @NonNull
  public final TextView appVersion;

  @NonNull
  public final CardView contactCard;

  @NonNull
  public final TextView contactEmail;

  @NonNull
  public final CardView descriptionCard;

  @NonNull
  public final LinearLayout legalLinks;

  @NonNull
  public final Button licensesButton;

  @NonNull
  public final TextView privacyLink;

  @NonNull
  public final Button rateAppButton;

  @NonNull
  public final Button shareAppButton;

  @NonNull
  public final TextView termsLink;

  @NonNull
  public final TextView websiteLink;

  private FragmentAboutBinding(@NonNull ScrollView rootView, @NonNull TextView appDescription,
      @NonNull TextView appIcon, @NonNull TextView appName, @NonNull TextView appVersion,
      @NonNull CardView contactCard, @NonNull TextView contactEmail,
      @NonNull CardView descriptionCard, @NonNull LinearLayout legalLinks,
      @NonNull Button licensesButton, @NonNull TextView privacyLink, @NonNull Button rateAppButton,
      @NonNull Button shareAppButton, @NonNull TextView termsLink, @NonNull TextView websiteLink) {
    this.rootView = rootView;
    this.appDescription = appDescription;
    this.appIcon = appIcon;
    this.appName = appName;
    this.appVersion = appVersion;
    this.contactCard = contactCard;
    this.contactEmail = contactEmail;
    this.descriptionCard = descriptionCard;
    this.legalLinks = legalLinks;
    this.licensesButton = licensesButton;
    this.privacyLink = privacyLink;
    this.rateAppButton = rateAppButton;
    this.shareAppButton = shareAppButton;
    this.termsLink = termsLink;
    this.websiteLink = websiteLink;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appDescription;
      TextView appDescription = ViewBindings.findChildViewById(rootView, id);
      if (appDescription == null) {
        break missingId;
      }

      id = R.id.appIcon;
      TextView appIcon = ViewBindings.findChildViewById(rootView, id);
      if (appIcon == null) {
        break missingId;
      }

      id = R.id.appName;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.appVersion;
      TextView appVersion = ViewBindings.findChildViewById(rootView, id);
      if (appVersion == null) {
        break missingId;
      }

      id = R.id.contactCard;
      CardView contactCard = ViewBindings.findChildViewById(rootView, id);
      if (contactCard == null) {
        break missingId;
      }

      id = R.id.contactEmail;
      TextView contactEmail = ViewBindings.findChildViewById(rootView, id);
      if (contactEmail == null) {
        break missingId;
      }

      id = R.id.descriptionCard;
      CardView descriptionCard = ViewBindings.findChildViewById(rootView, id);
      if (descriptionCard == null) {
        break missingId;
      }

      id = R.id.legalLinks;
      LinearLayout legalLinks = ViewBindings.findChildViewById(rootView, id);
      if (legalLinks == null) {
        break missingId;
      }

      id = R.id.licensesButton;
      Button licensesButton = ViewBindings.findChildViewById(rootView, id);
      if (licensesButton == null) {
        break missingId;
      }

      id = R.id.privacyLink;
      TextView privacyLink = ViewBindings.findChildViewById(rootView, id);
      if (privacyLink == null) {
        break missingId;
      }

      id = R.id.rateAppButton;
      Button rateAppButton = ViewBindings.findChildViewById(rootView, id);
      if (rateAppButton == null) {
        break missingId;
      }

      id = R.id.shareAppButton;
      Button shareAppButton = ViewBindings.findChildViewById(rootView, id);
      if (shareAppButton == null) {
        break missingId;
      }

      id = R.id.termsLink;
      TextView termsLink = ViewBindings.findChildViewById(rootView, id);
      if (termsLink == null) {
        break missingId;
      }

      id = R.id.websiteLink;
      TextView websiteLink = ViewBindings.findChildViewById(rootView, id);
      if (websiteLink == null) {
        break missingId;
      }

      return new FragmentAboutBinding((ScrollView) rootView, appDescription, appIcon, appName,
          appVersion, contactCard, contactEmail, descriptionCard, legalLinks, licensesButton,
          privacyLink, rateAppButton, shareAppButton, termsLink, websiteLink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
